{"ast":null,"code":"import React,{useEffect,useRef}from\"react\";import gsap from\"gsap\";import{ScrollTrigger}from\"gsap/ScrollTrigger\";import\"./TimelineEvent.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TimelineEvent=function TimelineEvent(_ref){var event=_ref.event;var containerRef=useRef(null);var galleryImages=event.gallery||[];useEffect(function(){gsap.registerPlugin(ScrollTrigger);var container=containerRef.current;var tl=gsap.timeline({scrollTrigger:{pin:true,scrub:1,trigger:container,end:function end(){return container.scrollWidth-document.documentElement.clientWidth;}},defaults:{ease:\"none\",duration:1}});tl.to(\".parallax\",{x:300}).to(\".panel_img\",{x:function x(){return-(container.scrollWidth-document.documentElement.clientWidth);}},0);},[]);return/*#__PURE__*/_jsxs(\"div\",{ref:containerRef,className:\"TimelineEvent-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"TimelineEvent-arrowBox\",children:event.year}),/*#__PURE__*/_jsxs(\"div\",{className:\"timeline-event\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"timeline-image\",children:/*#__PURE__*/_jsx(\"img\",{src:event.image,alt:event.description})}),/*#__PURE__*/_jsxs(\"div\",{className:\"timeline-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:event.year}),/*#__PURE__*/_jsx(\"p\",{children:event.description})]}),/*#__PURE__*/_jsx(\"div\",{className:\"portfolio\",children:galleryImages.map(function(imgSrc,index){return/*#__PURE__*/_jsx(\"div\",{className:\"panel\",children:/*#__PURE__*/_jsx(\"div\",{className:\"panel_item\",children:/*#__PURE__*/_jsx(\"img\",{className:\"panel_img parallax\",src:imgSrc,alt:\"Gallery Image \".concat(index)})})},index);})})]})]});};export default TimelineEvent;","map":{"version":3,"names":["React","useEffect","useRef","gsap","ScrollTrigger","jsx","_jsx","jsxs","_jsxs","TimelineEvent","_ref","event","containerRef","galleryImages","gallery","registerPlugin","container","current","tl","timeline","scrollTrigger","pin","scrub","trigger","end","scrollWidth","document","documentElement","clientWidth","defaults","ease","duration","to","x","ref","className","children","year","src","image","alt","description","map","imgSrc","index","concat"],"sources":["/Users/tahaal/Desktop/personalwebsite/src/components/TimelineEvent.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport \"./TimelineEvent.css\";\n\nconst TimelineEvent = ({ event }) => {\n  const containerRef = useRef(null);\n  const galleryImages = event.gallery || [];\n\n  useEffect(() => {\n    gsap.registerPlugin(ScrollTrigger);\n\n    const container = containerRef.current;\n\n    let tl = gsap.timeline({\n      scrollTrigger: {\n        pin: true,\n        scrub: 1,\n        trigger: container,\n        end: () => container.scrollWidth - document.documentElement.clientWidth,\n      },\n      defaults: { ease: \"none\", duration: 1 },\n    });\n\n    tl.to(\".parallax\", { x: 300 })\n      .to(\".panel_img\", {\n        x: () => -(container.scrollWidth - document.documentElement.clientWidth),\n      }, 0);\n\n  }, []);\n\n  return (\n    <div ref={containerRef} className=\"TimelineEvent-container\">\n      <div className=\"TimelineEvent-arrowBox\">{event.year}</div>\n      <div className=\"timeline-event\">\n        <div className=\"timeline-image\">\n          <img src={event.image} alt={event.description} />\n        </div>\n        <div className=\"timeline-content\">\n          <h3>{event.year}</h3>\n          <p>{event.description}</p>\n        </div>\n        <div className=\"portfolio\">\n          {galleryImages.map((imgSrc, index) => (\n            <div className=\"panel\" key={index}>\n              <div className=\"panel_item\">\n                <img className=\"panel_img parallax\" src={imgSrc} alt={`Gallery Image ${index}`} />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TimelineEvent;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,MAAO,CAAAC,IAAI,KAAM,MAAM,CACvB,OAASC,aAAa,KAAQ,oBAAoB,CAClD,MAAO,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7B,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAAC,IAAA,CAAkB,IAAZ,CAAAC,KAAK,CAAAD,IAAA,CAALC,KAAK,CAC5B,GAAM,CAAAC,YAAY,CAAGV,MAAM,CAAC,IAAI,CAAC,CACjC,GAAM,CAAAW,aAAa,CAAGF,KAAK,CAACG,OAAO,EAAI,EAAE,CAEzCb,SAAS,CAAC,UAAM,CACdE,IAAI,CAACY,cAAc,CAACX,aAAa,CAAC,CAElC,GAAM,CAAAY,SAAS,CAAGJ,YAAY,CAACK,OAAO,CAEtC,GAAI,CAAAC,EAAE,CAAGf,IAAI,CAACgB,QAAQ,CAAC,CACrBC,aAAa,CAAE,CACbC,GAAG,CAAE,IAAI,CACTC,KAAK,CAAE,CAAC,CACRC,OAAO,CAAEP,SAAS,CAClBQ,GAAG,CAAE,SAAAA,IAAA,QAAM,CAAAR,SAAS,CAACS,WAAW,CAAGC,QAAQ,CAACC,eAAe,CAACC,WAAW,EACzE,CAAC,CACDC,QAAQ,CAAE,CAAEC,IAAI,CAAE,MAAM,CAAEC,QAAQ,CAAE,CAAE,CACxC,CAAC,CAAC,CAEFb,EAAE,CAACc,EAAE,CAAC,WAAW,CAAE,CAAEC,CAAC,CAAE,GAAI,CAAC,CAAC,CAC3BD,EAAE,CAAC,YAAY,CAAE,CAChBC,CAAC,CAAE,SAAAA,EAAA,QAAM,EAAEjB,SAAS,CAACS,WAAW,CAAGC,QAAQ,CAACC,eAAe,CAACC,WAAW,CAAC,EAC1E,CAAC,CAAE,CAAC,CAAC,CAET,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEpB,KAAA,QAAK0B,GAAG,CAAEtB,YAAa,CAACuB,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACzD9B,IAAA,QAAK6B,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAEzB,KAAK,CAAC0B,IAAI,CAAM,CAAC,cAC1D7B,KAAA,QAAK2B,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B9B,IAAA,QAAK6B,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7B9B,IAAA,QAAKgC,GAAG,CAAE3B,KAAK,CAAC4B,KAAM,CAACC,GAAG,CAAE7B,KAAK,CAAC8B,WAAY,CAAE,CAAC,CAC9C,CAAC,cACNjC,KAAA,QAAK2B,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/B9B,IAAA,OAAA8B,QAAA,CAAKzB,KAAK,CAAC0B,IAAI,CAAK,CAAC,cACrB/B,IAAA,MAAA8B,QAAA,CAAIzB,KAAK,CAAC8B,WAAW,CAAI,CAAC,EACvB,CAAC,cACNnC,IAAA,QAAK6B,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBvB,aAAa,CAAC6B,GAAG,CAAC,SAACC,MAAM,CAAEC,KAAK,qBAC/BtC,IAAA,QAAK6B,SAAS,CAAC,OAAO,CAAAC,QAAA,cACpB9B,IAAA,QAAK6B,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzB9B,IAAA,QAAK6B,SAAS,CAAC,oBAAoB,CAACG,GAAG,CAAEK,MAAO,CAACH,GAAG,kBAAAK,MAAA,CAAmBD,KAAK,CAAG,CAAE,CAAC,CAC/E,CAAC,EAHoBA,KAIvB,CAAC,EACP,CAAC,CACC,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAnC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}